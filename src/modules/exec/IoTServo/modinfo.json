{
    "menuSection": "executive_devices",
    "configItem": [
        {
            "global": 0,
            "name": "Сервопривод",
            "type": "Writing",
            "subtype": "IoTServo",
            "id": "servo",
            "widget": "rangeServo",
            "page": "servo",
            "descr": "угол",
            "pin": 12,
            "minPulseWidth": 544,
            "maxPulseWidth": 2400,
            "minAngle": 0,
            "maxAngle": 180,
            "trackingID": ""
        }
    ],
    "about": {
        "authorName": "Ilya Belyakov",
        "authorContact": "https://t.me/Biveraxe",
        "authorGit": "https://github.com/biveraxe",
        "specialThanks": "Oleg @Threedreality, Sergey @Serghei63",
        "moduleName": "IoTServo",
        "moduleVersion": "1.0",
        "usedRam": {
            "esp32_4mb": 15,
            "esp8266_4mb": 15
        },
        "title": "Сервопривод",
        "moduleDesc": "Предназначен для управления сервоприводом по уровню аналогово сигнала.",
        "propInfo": {
            "pin": "Пин, к которому подключен сервопривод",
            "minPulseWidth": "Минимальная длина импульса",
            "maxPulseWidth": "Максимальная длина импульса",
            "minAngle": "Минимальное значение угла (имеет значение для ESP32)",
            "maxAngle": "Максимальное значение угла (имеет значение для ESP32)",
            "trackingID": "Идентификатор отслеживания значения другого элемента конфигурации, например, чтение аналога"
        },
        "retInfo": "Содержит текущее значение поворота",
        "funcInfo": [
            {
                "name": "rotate",
                "descr": "Повернуть привод на значение",
                "params": [
                    "Числовое значение"
                ]
            }
        ]
    },
    "defActive": false,
    "usedLibs": {
        "esp32*": [
            "https://github.com/RoboticsBrno/ServoESP32#v1.0.3"
        ],
        "esp82*": []
    }
}