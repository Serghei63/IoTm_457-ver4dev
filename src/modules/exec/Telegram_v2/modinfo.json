{   
    "menuSection": "executive_devices",

    "configItem": [{
        "global": 0,
        "name": "Телеграм-Бот v2",
        "type": "Writing",
        "subtype": "Telegram_v2",
        "id": "tg",
        "widget": "",
        "page": "",
        "descr": "",
        "int": 10,
        "token": "",
        "chatID": "",
        "autos": 1,
        "receiveMsg": 1,
        "textMode":"0",
        "OTA": 0
    }],
    
    "about": {
        "authorName": "Mikhail Bubnov",
        "authorContact": "https://t.me/Mit4bmw",
        "authorGit": "https://github.com/Mit4el",
        "specialThanks": "",
        "moduleName": "Telegram_v2",
        "moduleVersion": "3.1",
        "usedRam": {
            "esp32_4mb": 37,
            "esp8266_4mb": 37
        },
        "title": "Телеграм-Бот v2",
        "moduleDesc": "Добавляет возможность отправлять сообщения от имени бота контакту в Телеграм-чате и получать команды. Можно использовать для обновление ОТА, для этого отправить файл firmware.bin или littlefs.bin в чат боту",
        "propInfo": {
            "token": "Токен для авторизации бота в системе Telegram",
            "autos": "Автоматически(1) или нет(0) запоминать ChatID по входящим сообщениям. Т.е. бот будет информировать тех, кто последний прислал сообщение.",
            "receiveMsg": "Обрабатывать(1) или нет(0) входящие сообщения.",
            "chatID": "ИД диалога с контактом. Необходим для отправки сообщений именно вам.",
            "OTA": "Разрешена(1) или запрещена(0) прошивка через чат бота. Если разрешена, то файл принимается только от пользователя прописанного в chatID или от всех если autos=1",
            "textMode": "Разметка оформления сообщения в сообщениях. 0-без оформления, 1-разметка Markdown v2, 2-разметка HTML"
        },
        "funcInfo": [
            {   
                "name": "sendMsg",
                "descr": "Отправить сообщение без повторений.",
                "params": ["Сообщение, может быть строкой, числом или ИД другого элемента для получения значения"]
            },
            {   
                "name": "sendOftenMsg",
                "descr": "Отправить сообщение в любом случае, даже если отправляли такое ранее.",
                "params": ["Сообщение, может быть строкой, числом или ИД другого элемента для получения значения"]
            },
            {   
                "name": "sendPinMsg",
                "descr": "Отправить закрепленное сообщение в любом случае, даже если отправляли такое ранее.",
                "params": ["Сообщение, может быть строкой, числом или ИД другого элемента для получения значения"]
            },
            {   
                "name": "unpinAllMsg",
                "descr": "Открепить все сообщения в чате.",
                "params": []
            },
            {   
                "name": "editMsg",
                "descr": "Отредактировать последнее отправленное ботом сообщение.",
                "params": ["Сообщение, может быть строкой, числом или ИД другого элемента для получения значения"]
            },
            {   
                "name": "sendFile",
                "descr": "Отправить файл в телеграмм, с указанием типа файла: 0-фото, 1-аудио, 2-документ, 3-видео, 4-анимация, 5-голос",
                "params": ["Путь к файлу (/test.png)", "Тип файла/информации (число)"]
            },
            {   
                "name": "editFile",
                "descr": "Отредактировать последний отправленный файл, с указанием типа файла: 0-фото, 1-аудио, 2-документ, 3-видео, 4-анимация, 5-голос",
                "params": ["Путь к файлу (/test.png)", "Тип файла/информации (число)"]
            },
            {
                "name": "btnMenu",
                "descr": "Описание кнопки меню. По нажатию запросит значение ID и отправит сообщение. ID УКАЗЫВАТЬ В КАВЫЧКАХ! Пример: btnMenu(Темп.Дома, Текущая температура, IDbme280)",
                "params": ["Name - название кнопки отображается ботом", "message - Произвольное сообщения присылается в ответ на кнопку", "Id - Вернет значение элемента"]
            },
            {
                "name": "btnMenu",
                "descr": "Описание кнопки меню. Установит значение value в setID. При необходимости запросит значение getID  и отправит сообщение. ID УКАЗЫВАТЬ В КАВЫЧКАХ!  Пример: btnMenu(\"Обогрев\", \"Текущая температура\", \"IDbme280\", \"IDrele\", 1), btnMenu(Свет, Вклбчил свет, \"\", IDrele, 1)",
                "params": ["Name - название кнопки отображается ботом", "message - Произвольное сообщения присылается в ответ на кнопку", "getId - Вернет значение элемента", "setId - Установит значение элементу", "value - Устанавливаемое значение"]
            },
            {
                "name": "showMenu",
                "descr": "Отобразить меню, созданное в сценарии",
                "params": []
            },
            {
                "name": "closeMenu",
                "descr": "Закрыть мменю",
                "params": []
            },
            {
                "name": "btnInline",
                "descr": "Описание кнопки встроенного (inline) меню. Запросит значение ID и отправит сообщение. ID УКАЗЫВАТЬ В КАВЫЧКАХ! Пример: btnInline(Темп.Дома, Текущая температура, IDbme280)",
                "params": ["Name - название кнопки отображается ботом", "message - Произвольное сообщения присылается в ответ на кнопку", "Id - Вернет значение элемента"]
            },
            {
                "name": "btnInline",
                "descr": "Описание кнопки встроенного (inline) меню выводит. Установит значение value в setID. Запросит значение getID (если указан) и отправит сообщение. ID УКАЗЫВАТЬ В КАВЫЧКАХ! Пример: btnInline(\"Обогрев\", \"Текущая температура\", \"IDbme280\", \"IDrele\", 1), btnMenu(Свет, Вклбчил свет, \"\", IDrele, 1)",
                "params": ["Name - название кнопки отображается ботом", "message - Произвольное сообщения присылается в ответ на кнопку", "getId - Вернет значение элемента", "setId - Установит значение элементу", "value - Устанавливаемое значение"]
            },
            {
                "name": "showInline",
                "descr": "Отобразить встроенное (inline) меню, созданное в сценарии",
                "params": []
            },
            {
                "name": "clearInline",
                "descr": "Очистить встроенное (inline) меню, вызвать для изменения, перед созданием новых кнопок",
                "params": []
            },
            {
                "name": "clearMenu",
                "descr": "Очистить меню, вызвать для изменения, перед созданием новых кнопок",
                "params": []
            }        
         ]
    },

    "defActive": false,

    "usedLibs": {
        "esp32*": [
            "gyverlibs/FastBot"
        ],
        "esp8266_4mb": [
            "gyverlibs/FastBot"
        ]
    }
}